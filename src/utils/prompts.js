export const buildDetectionPrompt = (vipCheckResult) => {
  let specialNote = "";
  if (vipCheckResult === "检测为AI")
    specialNote = `【维普检测特别说明（最高优先级）】
  该文本已被维普系统检测为AI生成，请特别注意：
  1. 重点分析维普可能识别的特征（如结构化范式、技术术语堆砌等）
  2. 应以维普检测结果为标准，仔细检查维普为何如此判断
  3. 在概率评估中应体现维普检测结果（高权重）`;
  else if (vipCheckResult === "检测为人工")
    specialNote = `【维普检测特别说明】 该文本未被维普系统检测为AI生成，请特别注意：维普认为该文本可能是人工撰写`;

  return `请对以下学术论文片段进行AIGC检测，严格按以下维度分析并给出概率评估（只给出 json 结果即可，不要输出其他内容）：

${specialNote}

【检测维度与权重】
1. 词汇特征（30%）：
- 检测高频副词("显著"、"充分"、"高效"等)、学术套话("研究表明"、"综上所述"等)
- 检查技术术语堆砌(如连续出现3个以上技术名词不加解释)
- 识别并列结构模板(如连续使用"(1)...(2)...(3)"分点说明)

2. 语法结构（40%）：
- 分析句式复杂度(主谓宾占比>70%扣分)
- 检测段落首句模板("当前..."、"随着..."等标准化开头)
- 识别模块化描述特征(技术栈介绍含框架+语言+数据库的固定组合)

3. 语义逻辑（30%）：
- 检查论点支撑关系(技术选型说明是否关联实际需求)
- 识别定义-应用脱节(先声明算法概念后未说明具体应用)
- 检测文献引用真实性(标注参考文献是否与内容强相关)

【特殊特征处理】
减少AIGC率项：
- 包含具体实施细节(如测试用例设计、异常处理机制)
- 出现个性化表达("我在..."、"实际遇到..."等)
- 存在合理文献引用([1][3]等标注与内容对应)

增加AIGC率项：
- 技术方案描述与需求分析脱节
- 功能罗列缺乏实施细节支撑
- 跨段落重复相同技术名词

【文本特征描述】
容易被维普识别为AI生成的文本特征：
- 结构化范式：高度模块化的逻辑框架（如"研究重点难点→实验设计→结果讨论→未来方向"的固定路径），段落间使用标准过渡词（如"例如""具体分析""综上"）
- 技术术语堆砌：高频出现专业词汇组合（如"TF-IDF向量化""语义矛盾识别""LIME解释工具"），且在单句中密集排列技术概念
- 论证对称性：严格遵循"问题描述→方法陈述→例证支撑"的三段式结构，每个技术观点必配实例说明

容易未被识别为AI的文本特征：
- 认知留白：存在合理的技术表述断层，符合人类写作的注意力分配特点
- 场景化表达
- 非对称论证：技术描述存在侧重性
- 代码具象化：展现真实开发痕迹

【输出格式】
请严格以JSON格式输出检测结果：{"aiRate":x}（x为0-100整数，表示文本落入AI生成特征空间的置信度）`;
};

export const buildOptimizationPrompt = () => {
return `请根据以下分析报告和原始文本，对论文片段给出具体的优化建议（要求输出严格JSON格式）：
1. 结合检测模型给出的检测报告
2. 提出3-5条具体修改建议，每条包含：
   - 修改策略
   - 修改示例（原始句子、优化后）
3. 修改后的文本禁止使用破折号、比喻句等 AI 常用句式
4. 尽量保持原文想表达的内容，修改内容禁止超过原句的30%

可以参考的优化策略（仅供参考）
1. 个性化特征植入
   - 插入1处主观判断语句（如"笔者认为..."）
   - 加入1-2句实施细节（如"调试过程中发现..."）
2. 逻辑标记消除
   - 将数字编号列表转换为自然过渡
3. 术语表达优化
   - 对专业术语添加口语化解释
4. 文献引用增强
   - 可以插入参考文献标注来降低 AIGC 率
   - 在描述后追加对比分析（如"与张伟[5]提出的方案不同，本系统采用..."）
5. 根据该论文片段的特点，给出其他优化策略

请严格按JSON格式返回，格式为：
{
  "suggestions": [
    {
      "suggestion": "具体优化策略（详细，让学生好理解，20字以上）",
      "origin": "修改前原文",
      "result": "修改后文本"
    }
  ]
}`;
};
